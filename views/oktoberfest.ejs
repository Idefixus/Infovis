<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<meta http-equiv="X-UA-Compatible" content="ie=edge">
		<title>Oktoberfest</title>
		
		<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
		<script src="https://d3js.org/d3.v5.min.js"></script>
	
		<link rel="stylesheet" type="text/css" href="style2.css" />
		
		<style type="text/css">
			
			#preview {
				width: 710px;
				height: 650px;
				vertical-align:top;
				margin-left: 4px;
				border: solid 1px #E84200;
				border-radius: 4px;
				background: #90A4AD;
			}

		</style>

	</head>

	<body>
		<script>
			function goback() {
				window.history.back();
			}
		</script>
		
		<script>
	
		width= 710;
		height= 650;
		var svg2 = d3.select("body").append("span")
			.append("svg")
			.attr("class","svgbig");
			
		var mdata = <%- JSON.stringify(data) %>;
		
		// add back button 
		svg2.append("image")
			.attr('x', 20).attr('y', 20)
			.attr('width', 40)
			.attr('height', 40)
			.attr("xlink:href", "back.png");	
		svg2.append("rect")
			.attr("class","back")
			.attr("x", 15).attr("y", 15)
			.attr("rx", 5).attr("ry", 5)
			.attr('width', 50)
			.attr('height', 50)
			.on("mouseover", function (d) { 
					d3.select(this).style("stroke", "darkgray")
						.style("fill", "gray"); 
			})
			.on("mouseout", function (d) { 
					d3.select(this).style("stroke", "gray")
						.style("fill", "lightgray"); 
			})
			.on("click", goback);
		
	
	
		svg2.append("svg:image")
			.attr('x', (width/10))
			.attr('y', 15)
			.attr('width', 300)
			.attr('height', 250)
			.attr("xlink:href", "oktoberfest.png");

		svg2.append("text")
			.attr("text-anchor", "left")
			.attr("transform", "translate(" + (width/2) + " ,150)")
			.attr("class", "descrtext")
			.text(mdata.Name);
		svg2.append("text")
			.attr("text-anchor", "left")
			.attr("transform", "translate(30 ,300)")
			.text("Bio: " + mdata.Bio)
			.call(wrap, (width-60));
		svg2.append("text")
			.attr("text-anchor", "left")
			.attr("transform", "translate(30 ,450)")
			.text("Bierpreis:  " + mdata.Bierpreis)
			.call(wrap, (width-60));
				
		
		// function for creating multiline texts
		function wrap(text, width) {
			text.each(function() {
				var text = d3.select(this),
					words = text.text().split(/\s+/).reverse(),
					word,
					line = [],
					y = text.attr("y"),
					dy = 1,
					tspan = text.text(null).append("tspan").attr("x", 0).attr("y", y).attr("dy", dy + "em");
				while (word = words.pop()) {
					line.push(word);
					tspan.text(line.join(" "));
					if (tspan.node().getComputedTextLength() > width) {
						line.pop();
						tspan.text(line.join(" "));
						line = [word];
						tspan = text.append("tspan").attr("x", 0).attr("y", y).attr("dy", dy + "em").text(word);
					}
				}
			});
		}
				
//-------------------------------------------------------------------

		// set the dimensions and margins of the graph
		var margin = {top: 80, right: 50, bottom: 30, left: 80},
			width = 710 - margin.left - margin.right,
			height = 650 - margin.top - margin.bottom,
			middle = 250;
			
			
		// define the div for the tooltip
		var div = d3.select("body").append("div")	
			.attr("class", "tooltip")				
			.style("opacity", 0);
		
		// prepare the base for adding graphs 
		var bodysvg = d3.select("body").append("span").append("svg").attr("class","svgbig").attr("id","preview");
		
		
		// appends svg element to the body for displaying the bar chart
		var graph = bodysvg.append("svg")
				.attr("class", "svgbig")
				.attr("transform","translate(10 , 10)")
				.attr("width", width + margin.left + margin.right)  
				.attr("height", height + margin.top + margin.bottom);
				
		// text labels
		graph.append("text")             
			.attr("transform", "translate(" + ((width+margin.right)/2) + " , 20)")
			.style("text-anchor", "middle")
			.attr("class","fattext")
			.text(mdata.Name);
		
		var sum = <%- JSON.stringify(sum) %>;
		graph.append("text")
			.attr("transform", "translate(" + (margin.left/2) + ", " + (margin.top/2) + ")")
			.style("text-anchor", "left")
			.text("... wurde insgesamt " + sum + " Mal in der Beschreibung eines Artikels der nachfolgend aufgelisteten Zeitungen erw√§hnt.")
			.call(wrap, (width+margin.left));
			
				
		
		var barHeight = 20;
		var scaleFactor = 2;
		var bardata = <%- JSON.stringify(results) %>;
			
                
		// appends a group element for every data entry to the svg
		// and assigns the data to it
		var bar = graph.selectAll("g")
			.data(bardata)
			.enter()
			.append("g")
			.attr("transform", function(d, i) {
				return "translate(250," + (i*barHeight+margin.top) + ")";
			});
				
				
		// draws a bar for every data entry
		bar.append("rect")
			.attr("width", function(d) {
				return d.count * scaleFactor;
			})
			.attr("height", barHeight - 1)
			.on("mouseover", function (d) { 
				d3.select(this).style("fill", "#B55038"); })
			.on("mouseout", function(d) {
				d3.select(this).style("fill", "#364C5F"); });
             
		// adds the keyword string to every bar
		bar.append("text")
			.attr("x", function(d) {return -5;}) 
			.attr("y", barHeight / 2)
			.attr("dy", ".35em")
			.style("text-anchor", "end")
			.text(function(d) { return d.newsportal; });					

		// adds number of occurrences to every bar
		bar.append("text")
			.attr("x", function(d) {
				var space = 10;
				if (d.count > 9) space = 15;
				if (d.count > 99) space = 22;
				if (d.count > 999) space = 30;
				return (d.count * scaleFactor + space); })
			.attr("y", barHeight / 2)
			.attr("dy", ".35em")
			.style("text-anchor", "end")
			.text(function(d) { return d.count; });		
				
		

//-------------------------------------------------------------------


		// appends the svg obgect to the body of the page
		// appends a 'group' element to 'svg'
		// moves the 'group' element to the top left margin
		var svg = bodysvg.append("svg")
			.attr("class","svgsmall")
			.attr("width", width + margin.left+margin.right)
			.attr("height", middle*2)
			.attr("transform","translate(0 , "+middle+")")
			.append("g")
			.attr("width", width + margin.left+margin.right)
			.attr("height", middle)
			.attr("transform", "translate(" + margin.left + "," + margin.top + ")");
		svg.append("text")
			.attr("text-anchor", "left")
			.attr("transform", "translate(-20 ,-10)")
			.text("Bierkonsum auf dem Oktoberfest:")
			.attr("class","descrtext");
			

var dataAsCsv = `Year,Amount
1980,38438
1981,42434
1982,43323
1983,45760
1984,49713
1985,54541
1986,53807
1987,52817
1988,50951
1989,51241
1990,54300
1991,54686
1992,48888
1993,51933
1994,52108
1995,50162
1996,52622
1997,55891
1998,54782
1999,60054
2000,64591
2001,48698
2002,57614
2003,62294
2004,61163
2005,61012
2006,68617
2007,69406
2008,64922
2009,66436
2010,71000
2011,79225
2012,74025
2013,77031
2014,76808
2015,75134
2016,66231
2017,77836`;

		var dataline = d3.csvParse(dataAsCsv);

		// set the ranges
		var x = d3.scaleTime().range([0, (width-margin.left/2)]);
		var y = d3.scaleLinear().range([middle, 0]);

		// define the line for the line chart
		var valueline = d3.line()
			.x(function(d) { return x(d.Year); })
			.y(function(d) { return y(d.Amount); });
			
		var parseTime = d3.timeParse("%Y");
		var formatTime = d3.timeFormat("%Y");
		
		// formats the data
		dataline.forEach(function(d) {
			d.Year = parseTime(d.Year);
			d.Amount = +d.Amount;
		});
		
		// scales the range of the data
		x.domain(d3.extent(dataline, function(d) { return d.Year}));
		y.domain([0, d3.max(dataline, function(d) { return d.Amount; })]);
		
		// adds the valueline path
		svg.append("path")
			.data([dataline])
			.attr("class", "line")
			.attr("d", valueline);

		// adds the X Axis
		svg.append("g")
			.attr("transform", "translate(0," + middle + ")")
			.call(d3.axisBottom(x));

		// text label for the x axis
		svg.append("text")             
			.attr("transform",
				"translate(" + (width/2) + " ," + (middle +40) + ")")
			.style("text-anchor", "middle")
			.text("Jahr");

		// adds the Y Axis
		svg.append("g")
			.call(d3.axisLeft(y));

		// text label for the y axis
		svg.append("text")
			.attr("transform", "rotate(-90)")
			.attr("y", 0 - margin.left)
			.attr("x",0 - margin.top*3/2)
			.attr("dy", "1em")
			.style("text-anchor", "middle")
			.text("Menge (in hl)"); 			
			
		// appends a circle for each datapoint 
		svg.selectAll(".dot")
			.data(dataline)
			.enter()
			.append("circle") 
			.attr("class", "dot") 
			.attr("cx", function(d) { return x(d.Year) })
			.attr("cy", function(d) { return y(d.Amount) })
			.attr("r", 5)
			.on("mouseover", function (d) { 
				d3.select(this).style("fill", "#B55038"); 
				div.transition()		
					.duration(200)		
					.style("opacity", .9);		
				div.html("Jahr: " + formatTime(d.Year) + "<br/>"  + d.Amount + " hl")	
					.style("left", (d3.event.pageX) + "px")		
					.style("top", (d3.event.pageY - 28) + "px");	
            })
			.on("mouseout", function(d) {
				d3.select(this).style("fill", "#364C5F");
				div.transition()		
					.duration(500)		
					.style("opacity", 0);	
			});
	
		</script>
	
	</body>
</html>